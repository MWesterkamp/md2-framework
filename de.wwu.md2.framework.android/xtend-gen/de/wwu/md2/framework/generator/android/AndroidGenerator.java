package de.wwu.md2.framework.generator.android;

import de.wwu.md2.framework.generator.android.util.JavaClassDef;

/**
 * Android platform generator
 */
@SuppressWarnings("all")
public class AndroidGenerator /* implements AbstractPlatformGenerator  */{
  private int minAppVersion = 11;
  
  @Override
  public Object doGenerate(final /* IExtendedFileSystemAccess */Object fsa) {
    throw new Error("Unresolved compilation problems:"
      + "\nContainerElement cannot be resolved to a type."
      + "\nContainerElement cannot be resolved to a type."
      + "\nContainerElement cannot be resolved to a type."
      + "\nTabbedAlternativesPane cannot be resolved to a type."
      + "\nContainerElement cannot be resolved to a type."
      + "\nContainerElement cannot be resolved to a type."
      + "\nTabbedAlternativesPane cannot be resolved to a type."
      + "\nTabbedAlternativesPane cannot be resolved to a type."
      + "\nContainerElement cannot be resolved to a type."
      + "\nThe method or field rootFolder is undefined for the type AndroidGenerator"
      + "\nThe method getSystemResource is undefined for the type AndroidGenerator"
      + "\nThe method or field rootFolder is undefined for the type AndroidGenerator"
      + "\nThe method getSystemResource is undefined for the type AndroidGenerator"
      + "\nThe method or field rootFolder is undefined for the type AndroidGenerator"
      + "\nThe method getSystemResource is undefined for the type AndroidGenerator"
      + "\nThe method or field rootFolder is undefined for the type AndroidGenerator"
      + "\nThe method getSystemResource is undefined for the type AndroidGenerator"
      + "\nThe method or field rootFolder is undefined for the type AndroidGenerator"
      + "\nThe method getSystemResource is undefined for the type AndroidGenerator"
      + "\nThe method or field rootFolder is undefined for the type AndroidGenerator"
      + "\nThe method getSystemResource is undefined for the type AndroidGenerator"
      + "\nThe method or field rootFolder is undefined for the type AndroidGenerator"
      + "\nThe method getSystemResource is undefined for the type AndroidGenerator"
      + "\nThe method or field rootFolder is undefined for the type AndroidGenerator"
      + "\nThe method getSystemResource is undefined for the type AndroidGenerator"
      + "\nThe method or field rootFolder is undefined for the type AndroidGenerator"
      + "\nThe method getSystemResource is undefined for the type AndroidGenerator"
      + "\nThe method or field rootFolder is undefined for the type AndroidGenerator"
      + "\nThe method getSystemResource is undefined for the type AndroidGenerator"
      + "\nThe method or field rootFolder is undefined for the type AndroidGenerator"
      + "\nThe method getSystemResource is undefined for the type AndroidGenerator"
      + "\nThe method or field rootFolder is undefined for the type AndroidGenerator"
      + "\nThe method or field rootFolder is undefined for the type AndroidGenerator"
      + "\nThe method or field rootFolder is undefined for the type AndroidGenerator"
      + "\nThe method or field rootFolder is undefined for the type AndroidGenerator"
      + "\nThe method or field rootFolder is undefined for the type AndroidGenerator"
      + "\nThe method createAppClassName is undefined for the type AndroidGenerator"
      + "\nThe method or field dataContainer is undefined for the type AndroidGenerator"
      + "\nThe method createAppClassName is undefined for the type AndroidGenerator"
      + "\nThe method or field dataContainer is undefined for the type AndroidGenerator"
      + "\nThe method or field dataContainer is undefined for the type AndroidGenerator"
      + "\nThe method or field rootFolder is undefined for the type AndroidGenerator"
      + "\nThe method or field dataContainer is undefined for the type AndroidGenerator"
      + "\nThe method or field dataContainer is undefined for the type AndroidGenerator"
      + "\nThe method or field rootFolder is undefined for the type AndroidGenerator"
      + "\nThe method or field dataContainer is undefined for the type AndroidGenerator"
      + "\nThe method or field rootFolder is undefined for the type AndroidGenerator"
      + "\nThe method or field newHashSet is undefined for the type AndroidGenerator"
      + "\nThe method or field dataContainer is undefined for the type AndroidGenerator"
      + "\nThe method or field newHashSet is undefined for the type AndroidGenerator"
      + "\nThe method or field dataContainer is undefined for the type AndroidGenerator"
      + "\nThe method or field newLinkedList is undefined for the type AndroidGenerator"
      + "\nThe method or field dataContainer is undefined for the type AndroidGenerator"
      + "\nThe method or field dataContainer is undefined for the type AndroidGenerator"
      + "\nThe method or field dataContainer is undefined for the type AndroidGenerator"
      + "\n! cannot be resolved."
      + "\n! cannot be resolved."
      + "\nThe method or field rootFolder is undefined for the type AndroidGenerator"
      + "\nThe method or field newHashSet is undefined for the type AndroidGenerator"
      + "\nThe method or field dataContainer is undefined for the type AndroidGenerator"
      + "\nThe method or field dataContainer is undefined for the type AndroidGenerator"
      + "\nThe method or field dataContainer is undefined for the type AndroidGenerator"
      + "\nThe method or field dataContainer is undefined for the type AndroidGenerator"
      + "\nThe method or field dataContainer is undefined for the type AndroidGenerator"
      + "\nThe method or field dataContainer is undefined for the type AndroidGenerator"
      + "\nThe method or field rootFolder is undefined for the type AndroidGenerator"
      + "\nThe method toFirstUpper is undefined for the type AndroidGenerator"
      + "\nThe method or field dataContainer is undefined for the type AndroidGenerator"
      + "\nThe method or field dataContainer is undefined for the type AndroidGenerator"
      + "\nThe method or field dataContainer is undefined for the type AndroidGenerator"
      + "\nThe method or field dataContainer is undefined for the type AndroidGenerator"
      + "\nThe method or field dataContainer is undefined for the type AndroidGenerator"
      + "\nThe method or field dataContainer is undefined for the type AndroidGenerator"
      + "\nThe method or field rootFolder is undefined for the type AndroidGenerator"
      + "\nThe method toFirstUpper is undefined for the type AndroidGenerator"
      + "\nThe method or field rootFolder is undefined for the type AndroidGenerator"
      + "\nThe method toFirstUpper is undefined for the type AndroidGenerator"
      + "\nThe method or field dataContainer is undefined for the type AndroidGenerator"
      + "\nThe method or field dataContainer is undefined for the type AndroidGenerator"
      + "\nThe method or field newLinkedList is undefined for the type AndroidGenerator"
      + "\nThe method or field rootFolder is undefined for the type AndroidGenerator"
      + "\nThe method or field dataContainer is undefined for the type AndroidGenerator"
      + "\nThe method or field rootFolder is undefined for the type AndroidGenerator"
      + "\nThe method render is undefined for the type AndroidGenerator"
      + "\nInvalid number of arguments. The method getBasePackageName(Object) is not applicable without arguments"
      + "\nInvalid number of arguments. The method getBasePackageName(Object) is not applicable without arguments"
      + "\nInvalid number of arguments. The method getBasePackageName(Object) is not applicable without arguments"
      + "\nThe field newFragmentsToGenerate is not visible"
      + "\nThe field newFragmentsToGenerate is not visible"
      + "\nInvalid number of arguments. The method getBasePackageName(Object) is not applicable without arguments"
      + "\nInvalid number of arguments. The method getBasePackageName(Object) is not applicable without arguments"
      + "\nInvalid number of arguments. The method getBasePackageName(Object) is not applicable without arguments"
      + "\nInvalid number of arguments. The method getBasePackageName(Object) is not applicable without arguments"
      + "\nInvalid number of arguments. The method getBasePackageName(Object) is not applicable without arguments"
      + "\nInvalid number of arguments. The method getBasePackageName(Object) is not applicable without arguments"
      + "\nInvalid number of arguments. The method getBasePackageName(Object) is not applicable without arguments"
      + "\ncopyFileFromProject cannot be resolved"
      + "\n+ cannot be resolved"
      + "\ngenerateFileFromInputStream cannot be resolved"
      + "\n+ cannot be resolved"
      + "\ngenerateFileFromInputStream cannot be resolved"
      + "\n+ cannot be resolved"
      + "\ngenerateFileFromInputStream cannot be resolved"
      + "\n+ cannot be resolved"
      + "\ngenerateFileFromInputStream cannot be resolved"
      + "\n+ cannot be resolved"
      + "\ngenerateFileFromInputStream cannot be resolved"
      + "\n+ cannot be resolved"
      + "\ngenerateFileFromInputStream cannot be resolved"
      + "\n+ cannot be resolved"
      + "\ngenerateFileFromInputStream cannot be resolved"
      + "\n+ cannot be resolved"
      + "\ngenerateFileFromInputStream cannot be resolved"
      + "\n+ cannot be resolved"
      + "\ngenerateFileFromInputStream cannot be resolved"
      + "\n+ cannot be resolved"
      + "\ngenerateFileFromInputStream cannot be resolved"
      + "\n+ cannot be resolved"
      + "\ngenerateFileFromInputStream cannot be resolved"
      + "\n+ cannot be resolved"
      + "\ngenerateFile cannot be resolved"
      + "\n+ cannot be resolved"
      + "\ngenerateFile cannot be resolved"
      + "\n+ cannot be resolved"
      + "\ngenerateFile cannot be resolved"
      + "\n+ cannot be resolved"
      + "\ngenerateFile cannot be resolved"
      + "\n+ cannot be resolved"
      + "\n+ cannot be resolved"
      + "\n+ cannot be resolved"
      + "\n+ cannot be resolved"
      + "\n+ cannot be resolved"
      + "\ngenerateFile cannot be resolved"
      + "\n+ cannot be resolved"
      + "\nmodels cannot be resolved"
      + "\nmap cannot be resolved"
      + "\nmodelElements cannot be resolved"
      + "\nfilter cannot be resolved"
      + "\nflatten cannot be resolved"
      + "\nmodels cannot be resolved"
      + "\nforEach cannot be resolved"
      + "\nmodelElements cannot be resolved"
      + "\nforEach cannot be resolved"
      + "\ngenerateFile cannot be resolved"
      + "\n+ cannot be resolved"
      + "\nmain cannot be resolved"
      + "\nappName cannot be resolved"
      + "\ngenerateFile cannot be resolved"
      + "\n+ cannot be resolved"
      + "\nviewContainersNotInAnyAlternativesPane cannot be resolved"
      + "\nviewContainersInAnyAlternativesPane cannot be resolved"
      + "\nviewContainers cannot be resolved"
      + "\ntabbedAlternativesPane cannot be resolved"
      + "\n!= cannot be resolved"
      + "\ntabbedAlternativesPane cannot be resolved"
      + "\ngenerateFile cannot be resolved"
      + "\n+ cannot be resolved"
      + "\n+ cannot be resolved"
      + "\n+ cannot be resolved"
      + "\nmain cannot be resolved"
      + "\nstartView cannot be resolved"
      + "\nmain cannot be resolved"
      + "\nstartView cannot be resolved"
      + "\ntabbedViewContent cannot be resolved"
      + "\ncontains cannot be resolved"
      + "\nmain cannot be resolved"
      + "\nstartView cannot be resolved"
      + "\ntabbedAlternativesPane cannot be resolved"
      + "\ncustomActions cannot be resolved"
      + "\nforEach cannot be resolved"
      + "\ngenerateFile cannot be resolved"
      + "\n+ cannot be resolved"
      + "\n+ cannot be resolved"
      + "\n+ cannot be resolved"
      + "\n+ cannot be resolved"
      + "\n+ cannot be resolved"
      + "\nconditions cannot be resolved"
      + "\nforEach cannot be resolved"
      + "\nsimpleName cannot be resolved"
      + "\nworkflows cannot be resolved"
      + "\nforEach cannot be resolved"
      + "\nsimpleName cannot be resolved"
      + "\nname cannot be resolved"
      + "\ntoFirstUpper cannot be resolved"
      + "\nworkflowSteps cannot be resolved"
      + "\nforEach cannot be resolved"
      + "\nsimpleName cannot be resolved"
      + "\nname cannot be resolved"
      + "\ntoFirstUpper cannot be resolved"
      + "\ngenerateFile cannot be resolved"
      + "\n+ cannot be resolved"
      + "\n+ cannot be resolved"
      + "\n+ cannot be resolved"
      + "\n+ cannot be resolved"
      + "\n+ cannot be resolved"
      + "\ngenerateFile cannot be resolved"
      + "\n+ cannot be resolved"
      + "\n+ cannot be resolved"
      + "\n+ cannot be resolved"
      + "\n+ cannot be resolved"
      + "\n+ cannot be resolved"
      + "\ncontentProviders cannot be resolved"
      + "\nforEach cannot be resolved"
      + "\ngenerateFile cannot be resolved"
      + "\n+ cannot be resolved"
      + "\ngenerateFile cannot be resolved"
      + "\n+ cannot be resolved");
  }
  
  private Object createModel(final /* IExtendedFileSystemAccess */Object fsa, final /* ModelElement */Object elem) {
    throw new Error("Unresolved compilation problems:"
      + "\nThe method or field rootFolder is undefined for the type AndroidGenerator"
      + "\n+ cannot be resolved."
      + "\nInvalid number of arguments. The method getBasePackageName(Object) is not applicable without arguments"
      + "\nInvalid number of arguments. The method getBasePackageName(Object) is not applicable without arguments"
      + "\ngenerateFile cannot be resolved"
      + "\n+ cannot be resolved"
      + "\n+ cannot be resolved"
      + "\n+ cannot be resolved"
      + "\n+ cannot be resolved"
      + "\nname cannot be resolved"
      + "\n+ cannot be resolved"
      + "\nname cannot be resolved"
      + "\n+ cannot be resolved"
      + "\n+ cannot be resolved"
      + "\ntoString cannot be resolved"
      + "\n+ cannot be resolved"
      + "\n+ cannot be resolved"
      + "\n+ cannot be resolved"
      + "\n+ cannot be resolved"
      + "\n+ cannot be resolved");
  }
  
  @Override
  public String getPlatformPrefix() {
    return "android";
  }
  
  /**
   * Helper to create a java file descriptor.
   * 
   * @param initializer Function to initialize the file descriptor. It's return value will be used as the file content.
   * 
   * Example:
   * writeJavaFile(fsa, [it.baseName = "de.test"; it.simpleName = "HelloWorld"; generateHelloWorld(it)])
   */
  private JavaClassDef createJavaClassDef(final String subPackage, final /*  */Object initializer) {
    throw new Error("Unresolved compilation problems:"
      + "\nThe field basePackage is not visible"
      + "\nInvalid number of arguments. The method getBasePackageName(Object) is not applicable without arguments"
      + "\nThe field subPackage is not visible"
      + "\nThe field contents is not visible"
      + "\napply cannot be resolved");
  }
}
